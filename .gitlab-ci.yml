---
workflow:
  rules:
    - changes:
        - "main.go"
        - "packages/*.go"
        - "Dockerfile"
        - ".gitlab-ci.yml"
        - ".release/docker/docker-entrypoint.sh"
        - ".github/workflows/build-and-release.yml"
        - "README.md"
        - "GNUmakefile"

variables:
  DOCKER_REGISTRY: "registry.gitlab.com"
  NOMAD_HOST: "10.100.200.241"
  GITHUB_SF_TOKEN: "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"
  GITHUB_REMOTE_URL: "https://${GITHUB_SF_TOKEN}@github.com/cloudputation/service-factory.git"

build-binary:
  script:
    - make build
  artifacts:
    paths:
      - ./build/

build-docker-image:
  needs:
    - job: build-binary
  script:
    - mkdir ./artifacts
    - cp ${HOME}/working-dir/ci/runners/devel_ci/artifacts/terraform/* ./artifacts
    - cp .release/defaults/config.hcl .release/defaults/example.config.hcl
    - sudo make docker-build
  artifacts:
    paths:
      - ./build/

push-docker-image:
  needs:
    - job: build-docker-image
  script:
    - sudo make docker-push-alt DOCKER_REGISTRY=$DOCKER_REGISTRY

deploy-service:
  needs:
    - job: push-docker-image
  script:
    - terraform -chdir=$(pwd)/infra/terraform init
    - terraform -chdir=$(pwd)/infra/terraform apply -auto-approve -var nomad_server_address="http://${NOMAD_HOST}:4646" -var jobspec_path="$(pwd)/infra/nomad/jobspec.nomad"

set-repo-for-github-release:
  needs:
    - job: deploy-service
  script:
    # Remove ci resources
    - rm -f .release/defaults/config.hcl
    - rm -rf .git
    - rm -rf helpers/
    - rm -rf infra/
    - rm -rf tests/
    - rm -f .air.toml
    - rm -f .on-save.json
    - rm -f .gitlab-ci.yml
    - rm -f .gitignore

    # Prepare github repository for release
    - git init
    - git config --global user.name 'GitHub Actions'
    - git config --global user.email 'actions@github.com'
    - git remote add origin $GITHUB_REMOTE_URL
    - git checkout -b main
    - git add .
    - grep "true" ./GIT_CONTROLS/RELEASE && git rm -r --cached GIT_CONTROLS && bash helpers/create_release.sh
    - grep "false" ./GIT_CONTROLS/RELEASE && git rm -r --cached GIT_CONTROLS && git commit -m "ci commit" && git push -u origin main --force
  only:
    - main

clean-build:
  needs:
    - job: deploy-service
  script:
    - make clean
